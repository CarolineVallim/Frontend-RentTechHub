'use client';
import{__rest as e}from"tslib";import{spacing as r}from"../../../lib/spacing.js";import{colorPalette as t}from"../../../lib/theme.js";import{tremorTwMerge as o}from"../../../lib/tremorTwMerge.js";import{mergeRefs as l,getColorClassNames as a,makeClassName as s}from"../../../lib/utils.js";import c from"react";import i,{useTooltip as m}from"../../util-elements/Tooltip/Tooltip.js";const n=s("Tracker"),p=c.forwardRef(((r,s)=>{const{color:p,tooltip:f}=r,d=e(r,["color","tooltip"]),{tooltipProps:u,getReferenceProps:b}=m();return c.createElement("div",Object.assign({ref:l([s,u.refs.setReference]),className:o(n("trackingBlock"),"w-full h-full rounded-tremor-small",a(null!=p?p:"gray",t.background).bgColor)},d,b),c.createElement(i,Object.assign({text:f},u)))}));p.displayName="TrackerBlock";const f=c.forwardRef(((t,l)=>{const{data:a=[],className:s}=t,i=e(t,["data","className"]);return c.createElement("div",Object.assign({ref:l,className:o(n("root"),"w-full flex items-center h-10",r.threeXs.spaceX,s)},i),a.map(((e,r)=>{var t;return c.createElement(p,{key:null!==(t=e.key)&&void 0!==t?t:r,color:e.color,tooltip:e.tooltip})})))}));f.displayName="Tracker";export{f as default,n as makeTrackerClassName};
